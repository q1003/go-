微服务架构风格是一种将单体应用开发为一小套小型服务的方法，每个服务都在自己的
进程中运行，并使用轻量级的通信机制（通常事HTTP类型的API）进行通信。这些服务
都是围绕业务能力构建的，并且可以通过全自动化的部署机制进行独立部署。这些服务
可以用不同的编程语言编写，也能使用不同的数据存储技术。

微服务架构优势
1.更注重敏捷开发、持续交付
2.服务粒度小、服务质量精准可控
3.适用于互联网时代，产品迭代周期更短

架构的选型，永远只有合适与不合适，永远没有哪个更好的说法

如何进行服务划分
按业务职能划分：
由公司内部不同部门提供的职能。例如客户服务部门提供客户服务的职能，财务部门提供
财务相关的职能
按DDD的限界上下文：
限界上下文是DDD中用来划分不同业务边界的元素，这里业务边界的含义是“解决不同业务问题”
的问题域和对应的解决方案域。为解决某种类型的业务问题，贴近领域知识，也就是业务。

CQRS将系统中的操作分为两类，即Command与Query
命令则是对会引起数据发生变化操作的总称，即我们常说的新增，更新，删除这些操作，都是命令。
查询则和字面意思一样，即不会对数据产生变化的操作，只是按照某些条件查找数据。
CQRS的核心思想是将这两类不同的操作进行分离，然后在两个独立的服务中实现。
这里的服务一般是指两个独立部署的应用。在某些特殊情况下，也可以部署在同一个应用内的不同接口上。

微服务核心组件
API网关，服务注册中心，配置中心，服务通信，服务治理，服务监控
