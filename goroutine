进程：就是程序员在操作系统中的一次执行过程，是系统进行资源分配和调度的基本单位
线程：就是进程的一个执行实例，是程序执行的最小单元，它是比进程更小的能独立运行的基本单元

一个进程可以创建销毁多个线程，同一个进程中的多个线程可以并发执行
一个程序至少有一个进程，一个进程至少有一个线程

并发：多线程程序在单核上运行
并行：多线程程序在多核上运行

go主线程（可以直接成为线程，也可以理解为进程）：一个Go线程上，可以起多个协程，可以理解为协程是轻量级的线程
go协程的特点：
1.有独立的栈空间
2.共享程序堆空间
3.调度由用户控制
4.协程是轻量级的线程

主线程是一个物理线程，直接作用在cpu上的。是重量级的，非常耗费cpu资源。
协程是从主线程开启的，是轻量的线程是逻辑态。对资源消耗相对小
Golang的协程机制是重要的特点，可以轻松的开启上万个协程。其它编程语言的并发机制是一般基于线程的，开启过多的线程，资源耗费大，这里就突显Goalng在并发上的优势

例子：在主线程中开启一个goroutine，该协程每隔一秒输出"hello,world";在主线程中也每隔一秒输出"hello,golang"，输出10次后，退出程序
